<html><!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN">
<HTML>
<HEAD>
<TITLE>1.htm</TITLE>
<META HTTP-EQUIV="CONTENT-TYPE" CONTENT="TEXT/HTML; CHARSET=WINDOWS-1251">
<META NAME="GENERATOR" CONTENT="Microsoft FrontPage 4.0">
</HEAD>

<body background="fon.jpg" tppabs="http://orloff.am.tpu.ru/matlab/Append/Info/fon.jpg" oncopy = "return false">
<ul>
  <li><b><font face="Times New Roman CYR" size=3><a href="#1">Урок 3. Основы графической 
    визуализации вычислений </a></font></b> </li>
  <ul>
    <li><font face="Times New Roman CYR" size=3><a href="#2">Особенности графики 
      системы MATLAB </a></font> </li>
    <li><font face="Times New Roman CYR" size=3><a href="#3">Построение графика 
      функций одной переменной</a></font> </li>
    <ul>
      <li><font face="Times New Roman CYR" size=3><a href="#4">Построение в одном 
        окне графиков нескольких функций </a></font> </li>
      <li><font face="Times New Roman CYR" size=3><a href="#5">Графическая функция 
        fplot</a></font> </li>
    </ul>
    <li><font face="Times New Roman CYR" size=3><a href="#6">Столбцовые диаграммы 
      </a></font> </li>
    <li><font face="Times New Roman CYR" size=3><a href="#7">Построение трехмерных 
      графиков</a></font> </li>
    <li><font face="Times New Roman CYR" size=3><a href="#8">Вращение графиков 
      мышью </a></font> </li>
    <li><font face="Times New Roman CYR" size=3><a href="#9">Контекстное меню 
      графиков </a></font> </li>
    <li><font face="Times New Roman CYR" size=3><a href="#10">Основы форматирования 
      двумерных графиков </a></font> 
      <ul>
        <li><font face="Times New Roman CYR" size=3><a href="#11">Форматирование 
          линий графиков </a></font> </li>
        <li><font face="Times New Roman CYR" size=3><a href="#12">Форматирование 
          маркеров опорных точек</a></font> </li>
        <li><font face="Times New Roman CYR" size=3><a href="#13">Форматирование 
          линий и маркеров для графика нескольких функций </a></font> </li>
        <li><font face="Times New Roman CYR" size=3><a href="#14">Форматирование 
          осей графиков </a></font> </li>
        <li><font face="Times New Roman CYR" size=3><a href="#15">Нанесение надписей 
          и стрелок прямо на график </a></font> </li>
        <li><font face="Times New Roman CYR" size=3><a href="#16">Построение легенды 
          и шкалы цветов на графике </a></font> </li>
        <li><font face="Times New Roman CYR" size=3><a href="#17">Перемещение 
          графика в графическом окне </a></font> </li>
        <li><font face="Times New Roman CYR" size=3><a href="#18">Применение графической 
          "лупы" </a></font> </li>
      </ul>
    </li>
    <li><font face="Times New Roman CYR" size=3><a href="#19">Работа с камерой 
      ЗD-графики</a></font> </li>
    <li><font face="Times New Roman CYR" size=3><a href="#20">Заключительные замечания 
      по графике </a></font> </li>
    <li><font face="Times New Roman CYR" size=3><a href="#21">Что нового мы узнали? 
      </a></font> </li>
  </ul>
</ul>


<A NAME="1"></A> 
<P align="left"><font face="Times New Roman, Times, serif" size="2"><b><font size="3">Урок 
  №3.</font></b></font> </P>
<P align="left"><font face="Times New Roman" size="5">Основы графической визуализации 
  вычислений</font> </P>
<ul>
  <li>
    <p align="left"><font face="Times New Roman" size="3">&nbsp;Особенности графики системы MATLAB</font></li>
  <li>
    <p align="left"><font face="Times New Roman" size="3">&nbsp;Построение графика функций одной переменной</font></li>
  <li>
    <p align="left"><font face="Times New Roman" size="3"> Столбцовые диаграммы</font></li>
  <li>
    <p align="left"><font face="Times New Roman" size="3"> Построение трехмерных графиков</font></li>
  <li>
    <p align="left"><font face="Times New Roman" size="3">Вращение графиков мышью</font></li>
  <li>
    <p align="left"><font face="Times New Roman" size="3"> Контекстное меню графиков</font></li>
  <li>
    <p align="left"><font face="Times New Roman" size="3"> Управление форматом графиков</font></li>
</ul>
<P align="left"> <B><font face="Times New Roman" size="4"><a name="2"></a> Особенности 
  графики системы MATLAB</font></B> </P>
<P align="justify">
<font face="Times New Roman" size="3">Начиная с версии MATLAB 4.0, впервые ориентированной на Windows, графические средства системы MATLAB были существенно улучшены. Основные отличительные черты графики в новой версии MATLAB 6:</font>
</P>
<ul>
  <li>
    <p align="left"><font face="Times New Roman" size="3">&nbsp;существенно улучшенный интерфейс графических окон;</font></li>
  <li>
    <p align="left"><font face="Times New Roman" size="3">&nbsp;введение новой панели инструментов Camera для интерактивного изменения условий видимости объекта;</font></li>
  <li>
    <p align="left"><font face="Times New Roman" size="3">&nbsp;расширенные возможности форматирования графики;</font></li>
  <li>
    <p align="left"><font face="Times New Roman" size="3">&nbsp;возможность создания графики в отдельных окнах;</font></li>
  <li>
    <p align="left"><font face="Times New Roman" size="3">&nbsp;возможность вывода нескольких графических окон;</font></li>
  <li>
    <p align="left"><font face="Times New Roman" size="3">&nbsp;возможность перемещения окон по экрану и изменения их размеров;</font></li>
  <li>
    <p align="left"><font face="Times New Roman" size="3">&nbsp;возможность перемещения области графики внутри графического окна;</font></li>
  <li>
    <p align="left"><font face="Times New Roman" size="3"> задание различных координатных систем и осей;</font></li>
  <li>
    <p align="left"><font face="Times New Roman" size="3">&nbsp;высокое качество графики;</font></li>
  <li>
    <p align="left"><font face="Times New Roman" size="3">&nbsp;широкие возможности использования цвета;</font></li>
  <li>
    <p align="left"><font face="Times New Roman" size="3">&nbsp;легкость установки графических признаков — атрибутов;</font></li>
  <li>
    <p align="left"><font face="Times New Roman" size="3">&nbsp;снятие ограничений на число цветов;</font></li>
  <li>
    <p align="left"><font face="Times New Roman" size="3">&nbsp;обилие параметров команд графики;</font></li>
  <li>
    <p align="left"><font face="Times New Roman" size="3">&nbsp;возможность получения естественно выглядящих трехмерных фигур и их сочетаний;</font></li>
  <li>
    <p align="left"><font face="Times New Roman" size="3"> простота построения трехмерных графиков с их проекцией на плоскость;</font></li>
  <li>
    <p align="left"><font face="Times New Roman" size="3">&nbsp;возможность построения сечений трехмерных фигур и поверхностей плоскостями;</font></li>
  <li>
    <p align="left"><font face="Times New Roman" size="3">&nbsp;функциональная многоцветная и полутоновая
    окраска;</font></li>
  <li>
    <p align="left"><font face="Times New Roman" size="3">&nbsp;возможность имитации световых эффектов при освещении фигур точечным источником света;</font></li>
  <li>
    <p align="left"><font face="Times New Roman" size="3">&nbsp;возможность создания анимационной графики;</font></li>
  <li>
    <p align="left"><font face="Times New Roman" size="3">&nbsp;возможность создания объектов для типового интерфейса пользователя.<BR>
    </font></li>
</ul>
<P align="justify">
<font face="Times New Roman" size="3">С понятием графики связано представление о <I>графических объектах, </I>имеющих</font>
<font face="Times New Roman" size="3">определенные свойства. В большинстве случаев об объектах можно забыть, если</font>
<font face="Times New Roman" size="3">только вы не занимаетесь объектно-ориентированным программированием задач</font>
<font face="Times New Roman" size="3">графики. Связано это с тем, что большинство команд высокоуровневой графики,</font>
<font face="Times New Roman" size="3">ориентированной на конечного пользователя, автоматически устанавливает свойства графических объектов и обеспечивает воспроизведение графики в нужных системе координат, палитре цветов, масштабе и т. д.</font>
</P>
<P align="justify">
<font face="Times New Roman" size="3">На более низком уровне решения задач используется ориентированная на программиста <I>дескрипторная графика </I>(Handle Graphics), при которой каждому графическому объекту в соответствие ставится особое описание — <I>дескриптор, </I>на который возможны ссылки при использовании графического объекта. Дескрипторная графика позволяет осуществлять визуальное программирование объектов пользовательского интерфейса — управляющих кнопок, текстовых панелей и т. д. Команды дескрипторной графики могут использоваться в высокоуровневой графике, например, для удаления осей, изменения цвета и т. д. в уже построенных графических объектах. Эти обширные возможности делают графику MATLAB одной из лучших среди графических подсистем систем компьютерной математики (СКМ).</font>
</P>
<P align="justify">
<font face="Times New Roman" size="3">Несмотря на обилие графических команд, их синтаксис достаточно прост и легко усваивается даже начинающими пользователями. Руководствуясь правилом описания &laquo;от простого к сложному&raquo;, мы рассмотрим сначала графику функций одной переменной, а затем трехмерную графику, специальную, анимационную и, наконец, дескрипторную.</font>
</P>
<P align="justify">
<font face="Times New Roman" size="3">Хотя данная книга не предусматривает исчерпывающе полного описания всех команд графики системы MATLAB, большинство команд графики будет рассмотрено с примерами, которые можно считать дополнительными к тем, которые приведены в документации по системе.</font>
</P>
<P align="left"> <B><font face="Times New Roman" size="4"><a name="3"></a> Построение 
  графика функций одной переменной</font></B> </P>
<P align="justify">
<font face="Times New Roman" size="3">В режиме непосредственных вычислений доступны практически все возможности системы. Широко используется, например, построение графиков различных функций, дающих наглядное представление об их поведении в широком диапазоне изменения аргумента. При этом графики строятся в отдельных масштабируемых и перемещаемых окнах.</font>
</P>
<P align="justify">
<font face="Times New Roman" size="3">Возьмем вначале простейший пример — построение графика синусоиды. Следует помнить, что MATLAB (как и другие СКМ) строит графики функций по ряду точек, соединяя их отрезками прямых, т. е. осуществляя линейную интерполяцию функции в интервале между смежными точками. Зададим интервал изменения аргумента <I>х </I>от 0 до 10 с шагом 0.1. Для построения графика достаточно вначале задать вектор <strong>х=0:0.1:10</strong>, а затем использовать команду построения графиков <strong>plot(sin(x))</strong>. Это показано на рис. 3.1.</font>
</P>
<P align="justify">
<font face="Times New Roman" size="3">Вектор х задает интервал изменения независимой переменной от 0 до 10 с шагом 0.1. Почему взят такой шаг, а не, скажем,  1? Дело в том, что plot строит не истинный график функции sin(x), а лишь заданное числом элементов вектора х число точек. Эти точки затем просто соединяются отрезками прямых, т. е. осуществляется кусочно-линейная интерполяция данных графика. При 100 точках</font>
<font face="Times New Roman" size="3">полученная кривая глазом воспринимается как вполне плавная, но при 10-20 точках
она будет выглядеть состоящей из отрезков прямых.</font>
</P>
<P align="justify"> <font face="Times New Roman" size="3">Графики MATLAB строит в 
  отдельных окнах, называемых графическими окнами. С первого взгляда видны отличия 
  графического окна, показанного на рис. 3.1, от командного окна MATLAB. В главном 
  меню окна появилась позиция Tools (Инструменты), которая позволяет вывести или 
  скрыть инструментальную панель, видимую в верхней части окна графики на рис. 
  3.1. Средства этой панели (мы их рассмотрим полнее в дальнейшем) позволяют легко 
  управлять параметрами графиков и наносить на них текстовые комментарии в любом 
  месте.</font> </P>
<P align="left"><img src="3.1.jpg" tppabs="http://orloff.am.tpu.ru/matlab/Append/Info/3.1.jpg" width="429" height="495"></P>
<P align="left">
</P>
<P align="left">
<B><i><font face="Times New Roman" size="3">Рис. 3.1. </font></i> </B><font face="Times New Roman" size="3"><i>Пример построения графика синусоиды</i></font>
</P>
<P align="left"> <font face="Times New Roman" size="4"><a name="4"></a> Построение 
  в одном окне графиков нескольких функций</font> </P>
<P align="justify">
<font face="Times New Roman" size="3">Более подробное описание графического окна будет дано в уроке 5. А пока пойдем дальше и попытаемся построить графики сразу трех функций: sin(x), cos(x) и sin<I>(x)/х. </I>Прежде всего отметим, что эти функции могут быть обозначены переменными, не имеющими явного указания аргумента в виде у(х):</font>
</P>
<P align="left">
<font size="3" face="Courier New">&raquo;yl=sin(x): y2=cos(x): y3=sin(x)/x;</font>
</P>
<P align="left">
<font face="Times New Roman" size="3">Такая возможность обусловлена тем, что эти переменные являются векторами — как и переменная х. Теперь можно использовать одну из ряда форм команды&nbsp;</font>
</P>
<P align="left">
<font size="3" face="Courier New">plot: plot(al,fl,a2,f2,a3,f3,...).</font>
</P>
<P align="left">
<font face="Times New Roman" size="3">где al, а2, аЗ,.„ — векторы аргументов функций (в нашем случае все они — х), a f1, f2, f3,... —векторы значений функций, графики которых строятся в одном окне. В нашем случае для построения графиков указанных функций мы должны записать следующее:&nbsp;</font>
</P>
<P align="left">
<font size="3" face="Courier New"> &raquo; plot(x,yl,x,y2,x,y3)</font>
</P>
<P align="justify">
<font face="Times New Roman" size="3">Можно ожидать, что MATLAB в этом случае построит, как обычно, точки графиков этих функций и соединит их отрезками линий. Но, увы, если мы выполним</font>
<font face="Times New Roman" size="3">эти команды, то никакого графика не получим вообще. Не исключен даже сбой <I>в </I>работе программы. Причина этого казуса уже обсуждалась в предыдущем уроке — при вычислении функции y3=sin(x)/x, если х представляет собой массив (вектор), то нельзя использовать оператор матричного деления /.</font>
</P>
<P align="justify"> <font face="Times New Roman" size="3">Этот пример еще раз наглядно 
  указывает на то, что чисто поверхностное применение даже такой мощной системы, 
  как MATLAB, иногда приводит к досадным срывам. Чтобы все же получить график, 
  надо вычислять отношение <I>sin(x) к х </I>с помощью оператора поэлементного 
  деления массивов <font color="#FF0000"><strong>./</strong></font>. Этот случай поясняет рис. 3.2.</font></P>
<P align="left"><font face="Times New Roman" size="3"><img src="3.2.jpg" tppabs="http://orloff.am.tpu.ru/matlab/Append/Info/3.2.jpg" width="430" height="496"><BR>
  </font> </P>
<P align="left">
<B><i><font face="Times New Roman" size="3">Рис. 3.2. </font></i> </B><font face="Times New Roman" size="3"><i>Построение графиков трех функций</i></font>
</P>
<P align="justify">
<font face="Times New Roman" size="3">Обратите внимание на то, что хотя на этот раз MATLAB построил графики всех трех функций, в окне командного режима появилось предупреждение о делении на 0 — в момент, когда х=0. Это говорит о том, что MATLAB &laquo;не знает&raquo; о том, что неопределенность sin(x)/x вида 0/0 устранимая и дает 1. Это недостаток практически всех систем для численных вычислений.<BR>
</font></P>
<P align="left"> <font face="Times New Roman" size="4"><a name="5"></a> Графическая 
  функция fplot</font> </P>
<P align="left">
<font face="Times New Roman" size="3">Разумеется, MATLAB имеет средства для построения графиков и таких функций, как sin(x)/x, которые имеют устранимые неопределенности. Не обсуждая эти средства подробно, просто покажем, как это делается, с помощью другой графической команды —&nbsp;</font>
</P>
<P align="left"><font size="3" face="Courier New"> fplot('f(x)', [xmin xmax])</font></P>
<P align="justify"> <font face="Times New Roman" size="3">Она позволяет строить функцию, 
  заданную в символьном виде, в интервале изменения аргумента х от xmin до xmax 
  без фиксированного шага изменения х. Один из вариантов ее применения демонстрирует 
  рис. 3.3. </font></P>
<P align="justify"><font size="3" face="Courier New">&raquo; </font><font face="Times New Roman" size="3">clear</font><BR>
  <font size="3" face="Courier New">&raquo; </font><font face="Times New Roman" size="3">grid on<BR>
  </font><font size="3" face="Courier New">&raquo; fplot('sin(x)/x', [-15 15])</font></P>
<P align="justify"><font face="Times New Roman" size="3">Хотя в процессе вычислений предупреждение об ошибке (деление на 0) 
      выводится, но график строится правильно, при х=0 sinx/x = l. Обратите также внимание 
      на две используемые команды: clear (очистить)— очистка графического окна и grid 
      on (сетка)— включение отображения сетки, которая строится пунктирными линиями.</font></P>
<P align="left"><font face="Times New Roman" size="3"><img src="3.3.jpg" tppabs="http://orloff.am.tpu.ru/matlab/Append/Info/3.3.jpg" width="503" height="496"><BR>
  </font> </P>
<P align="left">
<B><i><font face="Times New Roman" size="3">Рис. 3.3. </font></i> </B><font face="Times New Roman" size="3"><i>Построение графика sin(x)/x функцией fplot</i></font>
</P>
<P align="justify">
<font face="Times New Roman" size="3">На рис. 3.3 представлено также меню File (Файл) окна графики. Оно содержит типовые файловые операции. Однако они относятся не к файлам документов, а к файлам графиков. В частности, можно присваивать имя записываемым на диск рисункам с графиками.</font>
</P>
<P align="justify">
<font face="Times New Roman" size="3">Позже мы более подробно рассмотрим возможности различных графических команд. В частности, покажем, как можно задавать определенный цвет и стиль линий, как менять вывод координатных осей, наносить на графики различные текстовые надписи и выполнять множество иных операций форматирования графиков для придания им более наглядного вида, соответствующего требованиям пользователя. Мы также обсудим множество новых форм применения графических команд, резко расширяющих их возможности построения графиков всех мыслимых типов.</font>
</P>
<P align="left"> <B><font face="Times New Roman" size="4"><a name="6"></a> Столбцовые 
  диаграммы</font></B> </P>
<P align="justify">
<font face="Times New Roman" size="3">В прикладных расчетах часто встречаются графики, именуемые столбцовыми диаграммами, отражающие содержание некоторого вектора V. При этом каждый элемент вектора представляется столбцом, высота которого пропорциональна значению элемента. Столбцы нумеруются и масштабируются по отношению к максимальному значению наиболее высокого столбца. Выполняет построение такого графика команда <strong>bar(V)</strong> (рис. 3.4).</font>
</P>
<P align="justify">
<font face="Times New Roman" size="3">Столбцовые диаграммы — лишь один из многих типов <I>графиков, </I>которые может строить система MATLAB. Особенно часто столбцовые диаграммы используются при представлении данных финансово-экономических расчетов.</font>
</P>
<P align="justify"> <font face="Times New Roman" size="3">Рис. 3.4 дает также представление 
  о меню Tools (Инструменты) окна графики, появившемся начиная с версии MATLAB 
  5.3.1 (выпуск 11.1). Нетрудно заметить, что кроме возможности вывода инструментальной 
  панели здесь имеется целый ряд других команд, которые будут рассмотрены в дальнейшем. 
  Это команды вывода свойств графических объектов, изменения масштаба графика, 
  добавления осей и т. д.</font> </P>
<P align="left"><img src="3.4.jpg" tppabs="http://orloff.am.tpu.ru/matlab/Append/Info/3.4.jpg" width="502" height="527"></P>
<P align="left">
<B><i><font face="Times New Roman" size="3">Рис. 3.4. </font></i> </B><font face="Times New Roman" size="3"><i>Построение столбцовой диаграммы значений элементов вектора</i></font>
</P>
<P align="left"> <B><font face="Times New Roman" size="4"><a name="7"></a> Построение 
  трехмерных графиков</font></B><font face="Times New Roman" size="3"><BR>
  </font> </P>
<P align="justify">
<font face="Times New Roman" size="3">Столь же просто обеспечивается построение графиков сложных поверхностей. Надо только знать, какой командой реализуется тот или иной график. Например, для построения графика поверхности и ее проекции в виде контурного графика на плоскость под поверхностью достаточно использовать следующие команды (см. урок 6):</font>
</P>
<P align="left">
<font size="3" face="Courier New">&raquo; [X,Y]=meshgrid(-5:0.1:5);<BR>
</font><font size="3" face="Courier New"> &raquo; Z=X.*sin(X+Y);<BR>
</font>

<font size="3" face="Courier New"> &raquo; meshc(X,Y,Z)</font></P>
<P align="left"> <font face="Times New Roman" size="3">Окно с построенным графиком 
  показано на рис. 3.5.</font></P>
<P align="left"><font face="Times New Roman" size="3"><img src="3.5.jpg" tppabs="http://orloff.am.tpu.ru/matlab/Append/Info/3.5.jpg" width="497" height="527"><BR>
  </font> </P>
<P align="left">
<i><B><font face="Times New Roman" size="3">Рис. 3.5. </font> </B></i><font face="Times New Roman" size="3"><i>Окно с графиками поверхности и ее проекции на плоскость под фигурой</i></font>
</P>
<P align="justify">
<font face="Times New Roman" size="3">Раньше пришлось бы убить много дней на составление и отладку нужной для построения такого графика программы. В MATLAB же можно в считанные секунды изменить задающую поверхность функцию <I>Z(X, Y) </I>и тут же получить новый график поверхности с окраской, в данном случае заданной вектором Z, и с ее проекцией на плоскость XY.</font></P>
<P align="justify">
<font face="Times New Roman" size="3">Мы ограничимся этими примерами построения графиков как достаточно простыми и типовыми. Из них следует важный вывод — для решения той или иной частной задачи надо знать соответствующие команды и функции. В этом вам помогут как данная книга, так и справочная система
MATLAB.</font>
</P>
<P align="left"> <B><font face="Times New Roman" size="4"><a name="8"></a> Вращение 
  графиков мышью</font></B> </P>
<P align="justify"> <font face="Times New Roman" size="3">Можно поворачивать построенную 
  фигуру мышью и наблюдать ее под разными углами. Рассмотрим эту возможность на 
  примере построения логотипа системы MATLAB — мембраны. Для этого, введя команду 
  <strong>membrane</strong>, получим исходный график, представленный на рис. 3.6.</font> </P>
<P align="left"><img src="3.6.jpg" tppabs="http://orloff.am.tpu.ru/matlab/Append/Info/3.6.jpg" width="497" height="527"></P>
<P align="left">
<B><i><font face="Times New Roman" size="3">Рис. 3.6. </font></i> </B><i><font face="Times New Roman" size="3">Построение мембраны — логотипа системы MATLAB</font></i>
</P>
<P align="justify">
<font face="Times New Roman" size="3">Для вращения графика достаточно активизировать последнюю справа кнопку панели инструментов с изображением пунктирной окружности со стрелкой. Теперь, введя курсор мыши в область графика и нажав левую кнопку мыши, можно круговыми движениями заставить график вращаться вместе с обрамляющим его параллелепипедом (рис. 3.7).</font>
</P>
<P align="justify"> <font face="Times New Roman" size="3">Любопытно, что в версии 
  MATLAB 6 вращать можно и двумерные графики, наблюдая поворот плоскости, в которой 
  они построены. Никакого программирования такое вращение не требует.</font> </P>
<P align="left"><img src="3.7.jpg" tppabs="http://orloff.am.tpu.ru/matlab/Append/Info/3.7.jpg" width="497" height="527"></P>
<P align="left">
<B><i><font face="Times New Roman" size="3">Рис. 3.7. </font></i> </B><font face="Times New Roman" size="3"><i>Вращение трехмерной фигуры мышью</i></font>
</P>
<P align="left"> <B><font face="Times New Roman" size="4"><a name="9"></a> Контекстное 
  меню графиков</font></B> </P>
<P align="justify"> <font face="Times New Roman" size="3">Для переключения в режим 
  редактирования графика нужно щелкнуть на кнопке Edit Plot (Редактировать график) 
  с изображением курсора-стрелки. В этом режиме графиком можно управлять с помощью 
  контекстного меню, вызываемого щелчком правой кнопки мыши. Вид этого меню при 
  курсоре, расположенном в области трехмерного графика вне построенных трехмерных 
  графических объектов, показан на рис. 3.8. С помощью мыши можно также выделить 
  график. Щелчок левой клавишей выводит рамку вокруг рисунка (см. рис. 3.8). Теперь 
  на график можно наносить стрелки, поясняющие надписи (кнопка с буквой А) и т. 
  д.</font> </P>
<P align="left"><img src="3.8.jpg" tppabs="http://orloff.am.tpu.ru/matlab/Append/Info/3.8.jpg" width="496" height="526"></P>
<P align="left">
<B><i><font face="Times New Roman" size="3">Рис. 3.8. </font></i> </B><font face="Times New Roman" size="3"><i>График в состоянии редактирования и контекстное меню</i></font>
</P>
<P align="left"> <B><font face="Times New Roman" size="4"><a name="10"></a> Основы 
  форматирования двумерных графиков</font></B> </P>
<P align="justify">
<font face="Times New Roman" size="3">Графики в системе MATLAB строятся обманчиво просто. Связано это с тем, что многие свойства графиков установлены по умолчанию. К таким свойствам относятся вывод или скрытие координатных осей, положение их центра, цвет линии графика, ее толщина и т. д. и т. п. Позже будет показано, как свойства и вид графиков можно менять в широких пределах с помощью параметров команд графики. Однако этот путь требует хорошего знания деталей языка программирования и дескрипторной графики системы
MATLAB.</font>
</P>
<P align="justify">
<font face="Times New Roman" size="3">В новой версии MATLAB 6 для изменения свойств графиков (их форматирования) используются принципы визуального контроля за стилем (видом) всех объектов графиков. Это позволяет легко, просто и наглядно придать графикам должный вид перед записью их в виде файлов на диск. Можно сказать, что в этой части реализованы отдельные принципы визуально-ориентированного программирования графических средств.</font>
</P>
<P align="justify">
<font face="Times New Roman" size="3">Здесь мы рассмотрим возможности форматирования графиков, которые, образно говоря, лежат на поверхности. Систематизированное описание интерфейса системы MATLAB 6.0, в том числе интерфейса графических окон, дается в уроке 5.</font>
</P>
<P align="left"> <font face="Times New Roman" size="4"><a name="11"></a> Форматирование 
  линий графиков</font> </P>
<P align="justify">
<font face="Times New Roman" size="3">MATLAB имеет возможность легко настраивать и корректировать свойства графиков с помощью специальных средств. В новой версии MATLAB 6.0 они существенно изменены. Так, в предшествующей версии для настройки (форматирования) графиков использовался специальный редактор свойств — Graphics Properties Editor (Редактор свойств графики). Его можно было вызвать из меню File окна командного режима MATLAB с помощью команды Show Graphics Properties Editor (Показать редактор свойств графики).</font>
</P>
<P align="justify">
<font face="Times New Roman" size="3">В новой версии MATLAB форматирование графиков стало более строгим и удобным. При этом ранее упомянутый редактор свойств графиков перестал так именоваться, и команда Show Graphics Properties в новой версии отсутствует. Ее заменяют команды Figure Properties (свойства фигуры) и Axis Properties (свойства осей) со всеми необходимыми настройками.</font>
</P>
<P align="justify">
<font face="Times New Roman" size="3">При построении графиков появляется графическое окно. Иногда оно бывает скрыто ранее имеющимися окнами как системы MATLAB, так и других работающих в среде Windows 95/98/Me/2000/NT4 приложений. Если вы не увидели графика, заданного для построения, то поищите его в списке открытых окон (приложений), нажимая клавиши Alt + Tab, и выберите из списка нужное окно. Окна графики имеют изображение логотипа системы MATLAB. По умолчанию они выводятся с панелью инструментов с рядом кнопок вполне очевидного назначения.</font>
</P>
<P align="justify">
<font face="Times New Roman" size="3">Щелкнув на кнопке Edit Plot (Редактировать график) в панели инструментов окна графики и щелкнув по графику, можно заметить, что график выделился: вокруг него появилась рамка. Теперь, указав курсором мыши на тот или иной объект</font>
<font face="Times New Roman" size="3">графика и щелкнув снова левой клавишей, можно наблюдать выделение объекта и появление окна его форматирования.</font>
</P>
<P align="justify"> <font face="Times New Roman" size="3">Например, указав в режиме 
  редактирования мышью на линию графика (и дважды быстро щелкнув левой клавишей), 
  можно увидеть окно форматирования линий графика, показанное на рис. 3.9 слева. 
  Часть окна графики с выделенным графиком видна справа. Обратите внимание на 
  появление на линии графика ряда черных квадратиков, — они используются для указания 
  курсором мыши именно на линию графика, а не на другие объекты.</font> </P>
<P align="left"><img src="3.9.jpg" tppabs="http://orloff.am.tpu.ru/matlab/Append/Info/3.9.jpg" width="500" height="375"></P>
<P align="left">
<B><i><font face="Times New Roman" size="3">Рис. 3.9. </font></i> </B><i><font face="Times New Roman" size="3">Окно графика (справа) и окно форматирования линий (слева)</font></i>
</P>
<P align="justify">
<font face="Times New Roman" size="3">В этом окне открыта главная для операций форматирования вкладка — Style (Стиль). Она устанавливает стиль отображения линии, т. е. ее вид (например, сплошная линия или пунктирная), ширину и цвет, а также параметры маркеров, отмечающих опорные точки графиков.</font>
</P>
<P align="justify">
<font face="Times New Roman" size="3">Полезно знать, что кнопка Apply (Применить) позволяет применить сделанные установки к графику до закрытия окна диалога. Кнопка О К вводит сделанные установки и закрывает окно диалога. Назначение других кнопок очевидно.</font>
</P>
<P align="left"> <font face="Times New Roman" size="4"><a name="12"></a> Форматирование 
  маркеров опорных точек</font> </P>
<P align="justify"> <font face="Times New Roman" size="3">В нашем случае опорные 
  точки задаются ранжированной переменной х, имеющей ряд значений от -15 до +15 
  с шагом 0.1. Эти точки появляются на графике, если в поле свойств маркера Marker 
  Properties (Свойства маркера) из меню Style (Стиль) выбрать стиль маркера. На 
  рис. 3.10, к примеру, показано построение графика с маркерами опорных точек 
  в виде окружностей.</font> </P>
<P align="left"><img src="3.10.jpg" tppabs="http://orloff.am.tpu.ru/matlab/Append/Info/3.10.jpg" width="493" height="527"></P>
<P align="left">
<B><i><font face="Times New Roman" size="3">Рис. 3.10. </font></i> </B><i><font face="Times New Roman" size="3">Пример задания параметров маркеров и построения графика с ними</font></i>
</P>
<P align="justify">
<font face="Times New Roman" size="3">Можно задавать размеры маркеров, цвет их закраски и цвет окантовки. Так, на рис. 3.10 при его просмотре на экране цветного дисплея маркеры имеют вид окружностей с условным размером 4, цветом окантовки красным и цветом закраски желтым. Маркеры можно задавать в виде окружностей, прямоугольников, крестиков, ромбиков и т. д. Применение маркеров делает графики более наглядными.</font>
</P>
<P align="left"> <B><font face="Times New Roman" size="4"><a name="13"></a> Форматирование 
  линий и маркеров для графика нескольких функций</font></B> </P>
<P align="justify">
<font face="Times New Roman" size="3">Если строится график нескольких функций, то можно форматировать линии и маркеры каждой кривой отдельно. Выполним следующие команды:</font>
</P>
<P align="left"><font size="3" face="Courier New">&raquo; х=-6:.1:6;<BR>
&raquo; plot(x,sin(x),x,sin(x).<sup>^</sup>3,x,sin(x).^5):</font>
</P>
<P align="justify">
<font face="Times New Roman" size="3">Рис. 3.11 показывает пример такого форматирования для графика, полученного исполнением этих команд.</font>
</P>
<P align="justify"> <font face="Times New Roman" size="3">Кстати, обратите внимание 
  на то, как заданы степени синуса. Записать эти выражения в виде sin(x)^2 и cos(x)^2 
  будет грубейшей ошибкой, поскольку х здесь вектор. Операторы ^ в данном случае 
  дают поэлементное возведение в степень, что и нужно для построения графиков 
  этих функций.</font> </P>
<P align="left"><img src="3.11.jpg" tppabs="http://orloff.am.tpu.ru/matlab/Append/Info/3.11.jpg" width="497" height="527"></P>
<P align="left">
<B><i><font face="Times New Roman" size="3">Рис. 3.11. </font></i> </B><i><font face="Times New Roman" size="3">Пример форматирования для графика трех функций</font></i>
</P>
<P align="left"> <font face="Times New Roman" size="4"><a name="14"></a> Форматирование 
  осей графиков</font> </P>
<P align="justify"> <font face="Times New Roman" size="3">Аналогично описанным выше 
  правилам выполняется форматирование и других объектов графиков. Например, указав 
  курсором мыши на оси графиков (на них тоже есть метки в виде черных квадратиков) 
  и дважды щелкнув левой клавишей мыши, можно увидеть появление окна форматирования 
  объектов дескрипторной графики Property Editor (Редактор свойств, Графический 
  редактор свойств) (рис. 3.12), настроенного на форматирование осей.</font></P>
<P align="left"><font face="Times New Roman" size="3"><img src="3.12.jpg" tppabs="http://orloff.am.tpu.ru/matlab/Append/Info/3.12.jpg" width="500" height="375"><BR>
  </font> </P>
<P align="left">
<B><i><font face="Times New Roman" size="3">Рис. 3.12. </font></i> </B><font face="Times New Roman" size="3"><i>Пример форматирования осей графика</i></font>
</P>
<P align="justify">
<font face="Times New Roman" size="3">Окно графического редактора свойств дескрипторной графики имеет множество вкладок, настройки которых довольно очевидны, и ничто не мешает читателю поэкспериментировать с ними несколько минут. Это позволит понять простоту и одновременно высокую эффективность средств форматирования объектов графики. Например, вы можете задать линейный или логарифмический масштаб осей (вкладка Scale (Масштаб), открытая на рис. 3.12), нормальное или инверсное направление осей ( X, У, а в случае трехмерных графиков и Z), показ сетки (параметр Grid Show), изменить стиль осей и цвета фона (вкладка Style (Стиль)), нанести у осей надписи (вкладка Label (Ярлык)) и пр.</font>
</P>
<P align="justify"> <font face="Times New Roman" size="3">Рис. 3.13 показывает график 
  синусоиды после некоторых операций по форматированию осей. Здесь (кстати, как 
  и на рис. 3.12) задано построение сетки Grid по осям X и Y, построение надписей 
  (просто буквы X и Y) по координатным осям и построение титульной надписи. Заодно 
  на рис. 3.13 показано в открытом виде меню расширенных инструментальных средств 
  графического окна. Его команды подробно обсуждаются в уроке 5. Словом, с объектами 
  графики можно сделать все, что угодно! Некоторые из возможностей форматирования 
  объектов графики мы рассмотрим позже, по мере описания типов графиков.</font> 
</P>
<P align="left"><img src="3.13.jpg" tppabs="http://orloff.am.tpu.ru/matlab/Append/Info/3.13.jpg" width="437" height="495"></P>
<P align="left">
<B><i><font face="Times New Roman" size="3">Рис. 3.13. </font></i> </B><i><font face="Times New Roman" size="3">Пример построения графика синусоиды после форматирования осей</font></i>
</P>
<P align="justify">
<font face="Times New Roman" size="3">Если компьютер оснащен должным набором шрифтов, то надписи на графиках могут быть сделаны на русском языке — рис. 3.13 хорошо иллюстрирует эту важную для наших пользователей возможность. На нем титульная надпись сделана на русском языке. Средства форматирования надписей дают обширные возможности по выбору набора шрифтов, их стиля, размеров символов и их цвета.</font>
</P>
<P align="left"> <font face="Times New Roman" size="4"><a name="15"></a> Нанесение 
  надписей и стрелок прямо на график</font> </P>
<P align="justify">
<font face="Times New Roman" size="3">Дополнительно на график можно нанести надписи с помощью кнопки панели инструментов с буквой А. Место надписи фиксируется щелчком мыши. На рис. 3.14 показан отформатированный график с текстовым блоком, созданным таким образом в левой верхней части поля графика.</font>
</P>
<P align="justify"> <font face="Times New Roman" size="3">Здесь показано контекстное 
  меню правой клавиши мыши, поясняющее выбор размера символов надписи (и другие 
  возможности этого меню). Напоминаем, что это меню появляется при щелчке правой 
  кнопки мыши на заданном объекте. В этом меню имеются все команды, доступные 
  для данного объекта в данной ситуации.</font> </P>
<P align="left"><img src="3.14.jpg" tppabs="http://orloff.am.tpu.ru/matlab/Append/Info/3.14.jpg" width="435" height="495"></P>
<P align="left">
<B><i><font face="Times New Roman" size="3">Рис. 3.14. </font></i> </B><i><font face="Times New Roman" size="3">Нанесение надписи на отформатированный график</font></i>
</P>
<P align="justify"> <font face="Times New Roman" size="3">Полученную таким образом 
  надпись можно выделить и перенести мышью в любое другое место. Рис. 3.15 показывает 
  процесс создания еще двух надписей с переносом их текстового блока в нужное 
  место. Надписи сделаны с разным размером символов и разным стилем. Особенно 
  приятно, что при задании на надписи возведения в степень знаком ^ надпись на 
  экране отображается в естественном математическом виде (степень в виде верхнего 
  индекса).</font> </P>
<P align="left"><img src="3.15.jpg" tppabs="http://orloff.am.tpu.ru/matlab/Append/Info/3.15.jpg" width="430" height="496"></P>
<P align="left">
<B><i><font face="Times New Roman" size="3">Рис. 3.15. </font></i> </B><i><font face="Times New Roman" size="3">Окончательно отформатированный график трех функций</font></i>
</P>
<P align="justify">
<font face="Times New Roman" size="3">На рис. 3.15, в частности, показано задание надписей разным стилем, а также задание стрелки с помощью соответствующей кнопки панели инструментов. Это стрелку</font>
<font face="Times New Roman" size="3">в режиме редактирования графика можно перемещать и вращать мышью, а также менять ее длину. Можно также наносить на график и обычные линии (без стрелки).</font>
</P>
<P align="left"> <font face="Times New Roman" size="4"><a name="16"></a>Построение 
  легенды и шкалы цветов на графике</font> </P>
<P align="justify"> <font face="Times New Roman" size="3">Дополнительно можно изменить 
  размеры графика (см. меню Tools (Инструменты) и его команды Zoom In (Увеличить)и 
  Zoom Out (Уменьшить)), начать поворот графика мышью (команда Rotate 3D), добавить 
  отрезок прямой или иной графический примитив (подменю Add) и подключить к графику 
  <I>легенду — </I>пояснение в виде отрезков линий со справочными надписями, размещаемое 
  внутри графика или около него. Поскольку наш график содержит три кривые, то 
  легенда представляет собой обозначение этих трех линий в правом верхнем углу 
  рисунка (рис. 3.16). Каждая линия имеет тот же цвет, что и на графике (и тот 
  же стиль).</font> </P>
<P align="left"><img src="3.16.jpg" tppabs="http://orloff.am.tpu.ru/matlab/Append/Info/3.16.jpg" width="447" height="494"></P>
<P align="left">
<B><i><font face="Times New Roman" size="3">Рис. 3.16. </font></i> </B><i><font face="Times New Roman" size="3">Окончательно сформированный график</font></i>
</P>
<P align="justify">
<font face="Times New Roman" size="3">Следует еще раз отметить, что все описанные возможности форматирования графиков доступны и программным способом, путем задания соответствующих графических команд, параметров и примитивов. Например команда text(х,у, 'legend') позволяет задать надпись 'legend' с началом, имеющим координаты (х, у). Если после первого апострофа перед текстом поместить параметр \leftarrow, то надпись (легенда) появится после стрелки с острием, обращенным влево. Аналогично параметр \rightarrow после надписи задает вывод стрелки после надписи с острием, обращенным вправо. Эта возможность позволяет помечать не только кривые, но и отдельные точки на них. Возможно также применение команды
legend('s1', 's2',...), выводящей легенду обычного вида — отрезки линий графиков с поясняющими надписями 'si', 's2' и т.д.</font>
</P>
<P align="left"> <font face="Times New Roman" size="4"><a name="17"></a> Перемещение 
  графика в графическом окне</font> </P>
<P align="justify"> <font face="Times New Roman" size="3">Обычно график занимает 
  фиксированное положение в центре графического окна. Однако в режиме редактирования 
  графиков, когда курсор мыши находится в области графика, в контекстном меню 
  правой клавиши мыши есть команда Unlock</font> <font face="Times New Roman" size="3">Axes 
  Position (Отключить позиционирование осей). Она снимает фиксацию положения координатных 
  осей графика и позволяет двигать его мышью вместе с осями. Это иллюстрирует 
  рис. 3.17.</font></P>
<P align="left"><font face="Times New Roman" size="3"><img src="3.17.jpg" tppabs="http://orloff.am.tpu.ru/matlab/Append/Info/3.17.jpg" width="216" height="235"><BR>
  </font> </P>
<P align="left">
<B><i><font face="Times New Roman" size="3">Рис. 3.17. </font></i> </B><font face="Times New Roman" size="3"><i>Пример перемещения графика</i></font>
</P>
<P align="left">
<font face="Times New Roman" size="3">Интересно, что при перемещении графика его легенда и цветовая диаграмма остаются на прежнем месте.</font>
</P>
<P align="left"> <font face="Times New Roman" size="4"><a name="18"></a> Применение 
  графической &laquo;лупы&raquo;</font> </P>
<P align="justify"> <font face="Times New Roman" size="3">На панели инструментов 
  есть кнопки с изображение лупы и знаками + и -. С их помощью выполняются команды 
  Zoom In (+)(Увеличить) и Zoom Out (-) (Уменьшить). Это позволяет увеличивать 
  или уменьшать масштаб просмотра изображения. При этом команда Zoom In интересна 
  еще одной возможностью — с ее помощью можно выделять часть графика перемещением 
  мыши с нажатой левой клавишей — рис. 3.18.</font></P>
<P align="left"><font face="Times New Roman" size="3"><img src="3.18.jpg" tppabs="http://orloff.am.tpu.ru/matlab/Append/Info/3.18.jpg" width="447" height="494"><BR>
  </font> </P>
<P align="left"> <B><i><font face="Times New Roman" size="3">Рис. 3.18. </font></i> 
  </B><i><font face="Times New Roman" size="3">Пример выделения части графика</font></i></P>
<P align="left"><i><font face="Times New Roman" size="3"><img src="3.19.jpg" tppabs="http://orloff.am.tpu.ru/matlab/Append/Info/3.19.jpg" width="447" height="509"><BR>
  </font></i> </P>
<P align="left">
<font face="Times New Roman" size="3"><i><B>Рис. 3.19. </B>Пример просмотра части графика</i></font>
</P>
<P align="justify">
<font face="Times New Roman" size="3">Область выделения отмечается прямоугольником из тонких точечных линий. Отпустив левую клавишу мыши, можно наблюдать построение выделенной части графика на всем окне — рис. 3.19. С помощью команды Zoom Out можно восстановить график в прежнем масштабе. Таким образом реализуется графическая &laquo;лупа&raquo;.</font>
</P>
<P align="left"> <font face="Times New Roman" size="4"><b><a name="19"></a> Работа 
  с камерой 3D-графики</b></font> </P>
<P align="justify">
<font face="Times New Roman" size="3">В отличие от двумерных (2D) графиков форматирование трехмерных графиков содержит ряд дополнительных возможностей. Покажем их на простом примере построения
3D-графики с помощью следующих простых команд:</font>
</P>
<P align="left">
<font size="3" face="Courier New">&raquo; Z=peaks(40):&nbsp;</font>
</P>
<P align="left"> <font size="3" face="Courier New"> &raquo; mesh(Z);</font></P>
<P align="left"><font face="Times New Roman" size="3"><img src="3.20.jpg" tppabs="http://orloff.am.tpu.ru/matlab/Append/Info/3.20.jpg" width="429" height="496"><BR>
  </font> </P>
<P align="left">
<B><i><font face="Times New Roman" size="3">Рис. 3.20. </font></i> </B><font face="Times New Roman" size="3"><i>Пример построения каркасного
3D-графика</i></font>
</P>
<P align="justify"> <font face="Times New Roman" size="3">Здесь первая команда создает 
  массив точек поверхности с помощью одного из ряда встроенных в ядро системы 
  MATLAB готовых описаний таких поверхностей.</font> </P>
<P align="left"><img src="3.21.jpg" tppabs="http://orloff.am.tpu.ru/matlab/Append/Info/3.21.jpg" width="403" height="511"></P>
<P align="left"><font face="Times New Roman" size="3"><i><b>Рис. 3.21. </b>Пример
форматирования трехмерного графика</i></font>
</P>
<P align="justify">
<font face="Times New Roman" size="3">Вторая команда просто строит эту поверхность по опорным точкам с использованием интерполяции для промежуточных точек. Таким образом создается цветная каркасная поверхность, как бы сотканная из разноцветных проволок. На рис. 3.20 показано построение этой поверхности вместе со специальной панелью инструментов трехмерной графики, названной в оригинале Camera (Камера).</font>
</P>
<P align="justify"> <font face="Times New Roman" size="3">Несмотря на множество кнопок, 
  пользование панелью инструментов 3D-графики достаточно просто, если представить 
  себе, что вы смотрите на предмет через объектив фотокамеры. Наглядные рисунки 
  на кнопках поясняют смысл их действия — это перемещение и вращение 3D-рисунков 
  относительно тех или иных координатных осей, включение отображения перспективы, 
  изменение цветовой схемы и др.</font> </P>
<P align="left"><img src="3.22.jpg" tppabs="http://orloff.am.tpu.ru/matlab/Append/Info/3.22.jpg" width="451" height="542"></P>
<P align="left">
<font face="Times New Roman" size="3"><i><b>Рис.. 3.22</b>. Cтоп кадр вращения трехмерного графика</i></font>
</P>
<P align="justify">
<font face="Times New Roman" size="3">Рис. 3.21 показывает, что приемы форматирования двумерной графики можно использовать при работе с трехмерной графикой — вывод надписи на график, вывод легенды (кстати, теперь объемной) и шкалы цветов.</font>
</P>
<P align="justify">
<font face="Times New Roman" size="3">Для управления положением и вращением трехмерного графика можно использовать клавиши перемещения курсора. Эффект вращения графика иллюстрирует рис. 3.22, где показан график рис. 3.21 после его поворота при нажатой клавише —&gt;. В отличие от поворота мышью (также возможного) перемещение и повороты с помощью клавиш курсора при выбранном типе перемещения дают плавное перемещение или вращение фигуры. Таким образом осуществляется анимация (оживление) трехмерной графики.</font>
</P>
<P align="left"> <B><font face="Times New Roman" size="4"><a name="20"></a> Заключительные 
  замечания по графике</font></B> </P>
<P align="justify">
<font face="Times New Roman" size="3">Итак, мы рассмотрели основные приемы форматирования графиков, в основном используя средства панели инструментов и отдельные, достаточно очевидные, команды из меню графического окна. Более подробно интерфейс пользователя графического окна будет описан в уроке 5.</font>
</P>
<P align="justify">
<font face="Times New Roman" size="3">Хотя многие приемы форматирования графики заимствованы из технологии визуально-ориентированного программирования, в базовой системе MATLAB (без дополнительных пакетов расширения (toolbox)) все еще отсутствует полноценная возможность такого программирования, даже с учетом расширенных возможностей дескрипторной графики. Это видно уже из того, что вносимые форматированием изменения в графиках не сопровождаются генерацией программных кодов, которые в последующем при их вызове с новыми параметрами порождали бы построение графиков с новыми параметрами. Пользователь может лишь записать на диск копии созданных графиков в формате растрового изображения (.bmp) и использовать их в целях иллюстрации своих материалов.</font>
</P>
<P align="justify">
<font face="Times New Roman" size="3">Однако средства MATLAB позволяют опытным программистам создать расширения системы с визуально-ориентированной технологией программирования. Самым наглядным примером этого является система моделирования динамических объектов Simulink с набором моделей из готовых блоков. При этом автоматически создается не только сложная графическая блок-схема моделируемого устройства, но и система уравнений состояния, решение которой и является основой моделирования.</font>
</P>
<P align="left"> <B><font face="Times New Roman" size="4"><a name="21"></a> Что 
  нового мы узнали?</font></B> </P>
<P align="left">
<font face="Times New Roman" size="3">В этом уроке мы научились:</font>
</P>
<ul>
  <li>
    <p align="left"><font face="Times New Roman" size="3"> Строить графики функций одной переменной.</font></li>
  <li>
    <p align="left"><font face="Times New Roman" size="3"> Строить столбцовые диаграммы.</font></li>
  <li>
    <p align="left"><font face="Times New Roman" size="3"> Строить трехмерные графики.</font></li>
  <li>
    <p align="left"><font face="Times New Roman" size="3"> Вращать графики мышью.</font></li>
  <li>
    <p align="left"><font face="Times New Roman" size="3">Использовать контекстное меню графиков.</font></li>
  <li>
    <p align="left"><font face="Times New Roman" size="3"> Управлять форматом графиков.</font></li>
</ul>
</BODY>
</HTML>

